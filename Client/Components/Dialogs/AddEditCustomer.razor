@using Microsoft.AspNetCore.Components
@using SetValues.Contracts.Models.Requests
@using SetValues.Contracts.Services

<MudDialog>
    <TitleContent>
        @if (Model.Id == 0)
        {
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1"/>
                Add Customer
            </MudText>
        }
        else
        {
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Update" Class="mr-3 mb-n1"/>
                Update Customer
            </MudText>
        }
    </TitleContent>
    <DialogContent>
        <EditForm Model="@Model">
            <MudGrid>
                @if (Model.Id != 0)
                {
                    <MudItem xs="12" md="6">
                        <MudTextField Disabled For="@(() => Model.Id)" @bind-Value="Model.Id" Label="Id"/>
                    </MudItem>
                }
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => Model.FirstName)" @bind-Value="Model.FirstName" Immediate="true" Label="First Name"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField For="@(() => Model.LastName)" @bind-Value="Model.LastName" Immediate="true" Label="Last Name"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="Model.Email" For="@(() => Model.Email)" Immediate="true" Label="Email"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="Model.Number" For="@(() => Model.Number)" Immediate="true" Label="House Number"/>
                </MudItem>
                <MudItem xs="12" md="6">
                    <MudTextField @bind-Value="Model.Street" For="@(() => Model.Street)" Immediate="true" Label="Street"/>
                </MudItem>
            </MudGrid>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
        <MudButton OnClick="SubmitAsync" DisableElevation Variant="Variant.Filled" Color="Color.Secondary">@(Model.Id != 0 ? "Update" : "Save")</MudButton>
        @* <MudButton OnClick="SubmitAsync" DisableElevation Variant="Variant.Filled" Disabled="@(!Validated)" Color="Color.Secondary">@(Model.Id != 0 ? "Update" : "Save")</MudButton> *@
    </DialogActions>
</MudDialog>

@code {
    [Parameter]
    public AddEditCustomerCommand Model { get; set; } = new();

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; } = default!;

    [Inject]
    private ICustomerService CustomerService { get; set; }

    private async Task SubmitAsync()
    {
        var result = await CustomerService.AddEdit(Model);
        if (result.Succeeded)
        {
            Snackbar.Add(result.Messages[0], Severity.Success);
            MudDialog.Close(DialogResult.Ok(true));
        }
    }

    private void Cancel() => MudDialog.Cancel();
}
